@model CodeSparkNET.Dtos.Account.ForgotPasswordDto

@{
  ViewData["Title"] = "Восстановление пароля";
}

@section Styles {
  <link rel="stylesheet" href="~/css/style/forgot.css">
}

<div class="__container forgot_password">
  <header>
    <a href="@Url.Action("Index", "Home")" banner>
      <img src="~/../assets/img/banner-tag.webp" alt="head-banner">
    </a>
  </header>

  <form asp-action="ForgotPassword" asp-controller="Account" method="post" class="form_controller" id="forgotForm"
    hover>
    @Html.AntiForgeryToken()

    <div class="description">
      <h2>Восстановление пароля</h2>
    </div>
    <span asp-validation-summary="ModelOnly" class="error_message_form"></span>
    <div class="input_block">
      <div class="email-block">
        <span asp-validation-for="Email"></span>
        <label asp-for="Email"></label>
        <input asp-for="Email" id="email" type="text" required hover>
      </div>
    </div>
    <button type="submit" data-style="hyper-button" hover id="forgotFormSendBtn">Восстановить</button>
    <div class="back_to_login-block">
      <a href="@Url.Action("Login", "Account")" hover data-style="link-underline">
        Вернуться к авторизации
      </a>
    </div>
  </form>

  <div class="js-window hidden" js-window-restore-password>
    <div class="description" hover>
      <h2>Проверьте вашу почту</h2>
      <button hover data-style="hyper-button"><span>Войти</span></button>
    </div>
  </div>

  <footer>
    <section>
      <a href="@Url.Action("License", "Documents")" hover data-style="link-new">Лицензионное соглашение</a>
      <a href="@Url.Action("Privacy", "Documents")" hover data-style="link-new">Политика конфиденциальности</a>
    </section>
    <section>
      © Code Spark, 2025. Все права на объекты прав третьих лиц принадлежат их законным правообладателям.
    </section>
  </footer>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('forgotForm');
    const summaryEl = document.querySelector('.error_message_form');

    form.addEventListener('submit', async (event) => {
      event.preventDefault();

      // Собираем данные формы и анти-CSRF токен
      const formData = new FormData(form);
      const tokenInput = form.querySelector('input[name="__RequestVerificationToken"]');
      const antiForgeryToken = tokenInput ? tokenInput.value : null;

      // Заголовки: не указываем Content-Type, т.к. отправляем FormData (браузер установит boundary)
      const headers = {};
      if (antiForgeryToken) headers['RequestVerificationToken'] = antiForgeryToken;

      try {
        const response = await fetch(form.action || window.location.pathname, {
          method: 'POST',
          credentials: 'same-origin',
          headers: headers,
          body: formData
        });

        showForgotPasswordResultModal();

      } catch (err) {
        console.error(err);
        summaryEl.textContent = 'Ошибка сети. Попробуйте ещё раз.';
      }
    });

    function showForgotPasswordResultModal() {
      const modalWindow = document.querySelector('.js-window') || document.querySelector('[js-window-restore-password]');
      if (!modalWindow) return;
      modalWindow.classList.remove('hidden');
      modalWindow.classList.add('visible');
    }
  });
</script>

@section Scripts {
  @{
    await Html.RenderPartialAsync("_ValidationScriptsPartial");
  }
}