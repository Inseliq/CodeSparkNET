@model CodeSparkNET.Dtos.Account.ResetPasswordDto

@{
  ViewData["Title"] = "Сброс пароля";
  ViewData["App"] = "CodeSpark";
}

@section Styles {
  <link rel="stylesheet" href="~/css/style/reset_password.css" asp-append-version="true">
}

<div class="__container reset_password">
  <header>
    <a href="@Url.Action("Index", "Home")" banner>
      <img src="~/../assets/img/banner-tag.webp" alt="head-banner">
    </a>
  </header>

  <form asp-action="ResetPassword" asp-controller="Account" method="post" class="form_controller" novalidate hover id="resetForm">
    @Html.AntiForgeryToken()

    <input type="hidden" asp-for="Email">
    <input type="hidden" asp-for="Token">

    <div class="description">
      <h2>Сброс вашего пароля</h2>
    </div>
    <span asp-validation-summary="ModelOnly" class="error_message_form"></span>
    <div class="input_block">
      <div class="password-block">
        <span asp-validation-for="Password"></span>
        <label asp-for="Password"></label>
        <input asp-for="Password" id="password" type="password" required hover>
      </div>
      <div class="confirm_password-block">
        <span asp-validation-for="ConfirmPassword"></span>
        <label asp-for="ConfirmPassword">Подтверждение пароля</label>
        <input asp-for="ConfirmPassword" id="confirm_password" type="password" required hover>
      </div>
    </div>
    <button type="submit" data-style="hyper-button" hover><span>Восстановить пароль</span></button>
    <div class="back_to_login-block">
      <a href="@Url.Action("Login", "Account")" hover data-style="link-underline">
        Вернуться к авторизации
      </a>
    </div>
  </form>

  <div class="js-window hidden" js-window-successful-restore-sc>
    <div class="description" hover>
      <h2>Пароль успешно восстановлен</h2>
      <a hover data-style="hyper-button"><span>Войти</span></a>
    </div>
  </div>

  <div class="js-window hidden" js-window-successful-restore-er>
    <div class="description" hover>
      <button close-window-er hover>×</button>
      <h2>Ошибка восстановления пароля</h2>
      <a hover data-style="hyper-button"><span>Попробовать снова</span></a>
    </div>
  </div>

  <footer>
    <section>
      <a href="@Url.Action("License", "Documents")" hover data-style="link-new">Лицензионное соглашение</a>
      <a href="@Url.Action("Privacy", "Documents")" hover data-style="link-new">Политика конфиденциальности</a>
    </section>
    <section>
      © Code Spark, 2025. Все права на объекты прав третьих лиц принадлежат их законным правообладателям.
    </section>
  </footer>
</div>

<script defer asp-append-version="true">
  document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('resetForm');
    const successWindow = document.querySelector('[js-window-successful-restore-sc]');
    const errorWindow = document.querySelector('[js-window-successful-restore-er]');
    const closeBtn = errorWindow?.querySelector('[close-window-er]');

    form.addEventListener('submit', async (event) => {
      event.preventDefault();

      if (!jQuery(form).valid())
        return;

      const formData = new FormData(form);
      const tokenInput = form.querySelector('input[name="__RequestVerificationToken"]');
      const antiForgeryToken = tokenInput ? tokenInput.value : null;

      const headers = {};
      if (antiForgeryToken) headers['RequestVerificationToken'] = antiForgeryToken;

      try {
        const response = await fetch(form.action || window.location.pathname, {
          method: 'POST',
          credentials: 'same-origin',
          headers: headers,
          body: formData
        });

        const result = await response.json();

        if (response.ok && result.success) {
          showSuccessWindow();
        } else {
          showErrorWindow();
        }
      } catch {
        showErrorWindow();
      }
    });

    function showSuccessWindow() {
      if (!successWindow) return;
      successWindow.classList.remove('hidden');
      successWindow.classList.add('visible');
      document.body.style.overflow = "hidden"; // убираем скролл
    }

    function showErrorWindow() {
      if (!errorWindow) return;
      errorWindow.classList.remove('hidden');
      errorWindow.classList.add('visible');
      document.body.style.overflow = "hidden"; // убираем скролл
    }

    function closeErrorWindow() {
      if (!errorWindow) return;
      errorWindow.classList.remove('visible');
      errorWindow.classList.add('hidden');
      document.body.style.overflow = ""; // возвращаем скролл
    }

    // Закрытие окна по кнопке
    if (closeBtn) {
      closeBtn.addEventListener('click', (e) => {
        e.stopPropagation();
        closeErrorWindow();
      });
    }

    // Закрытие по клику на фон окна
    if (errorWindow) {
      errorWindow.addEventListener('click', (e) => {
        if (e.target === errorWindow) {
          closeErrorWindow();
        }
      });
    }
  });
</script>



@section Scripts {
  @{
    await Html.RenderPartialAsync("_ValidationScriptsPartial");
  }
}