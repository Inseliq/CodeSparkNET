@using Microsoft.AspNetCore.Identity
@model CodeSparkNET.Dtos.Profile.ProfileDto
@inject UserManager<AppUser> UserManager
@{
    var user = UserManager.GetUserAsync(User).Result;
}
@{
    ViewData["Title"] = "Profile";
}
@section Styles {
    <link rel="stylesheet" href="~/css/style/profile.css">
}

<h1>@ViewData["Title"]</h1>

<div class="__container profile_page">
    @if (UserManager.IsEmailConfirmedAsync(user).Result is false)
    {
        <div class="alert alert-warning" role="alert">
            Ваш email не подтвержден.
            <a id="confirmEmailBtn" class="btn btn-link p-0 m-0 align-baseline">Отправить письмо с
                подтверждением</a>.
        </div>
    }
    else
    {
        <div>Ваш email подтвержден</div>
    }
    <form asp-action="UpdateProfile" asp-controller="Profile" method="post" class="form_controller"
        id="updateProfileForm">
        @Html.AntiForgeryToken()

        <div class="description">
            <h2>Личные данные!</h2>
        </div>
        <span asp-validation-summary="ModelOnly" class="error_message_form"></span>
        <div class="input_block">
            <div class="names-block">
                <span asp-validation-for="UpdatePersonalProfileDto.UserName"></span>
                <label asp-for="UpdatePersonalProfileDto.UserName">Имя пользователя</label>
                <input asp-for="UpdatePersonalProfileDto.UserName" id="names" type="text" value="@ViewBag.UserName"
                    required hover>
            </div>
            <div class="email-block not_margin_top">
                <span asp-validation-for="UpdatePersonalProfileDto.Email" class="not_margin_top"></span>
                <label asp-for="UpdatePersonalProfileDto.Email">Email</label>
                <input asp-for="UpdatePersonalProfileDto.Email" id="email" type="email" value="@ViewBag.Email" required
                    hover>
            </div>
            <div class="password-block">
                @ViewBag.Role
            </div>
        </div>
        <button type="submit" data-style="hyper-button" hover>Сохранить</button>
    </form>
    <form asp-action="ChangePassword" asp-controller="Profile" method="post" class="form_controller"
        id="changePasswordForm">
        @Html.AntiForgeryToken()

        <div class="description">
            <h2>Смена пароля</h2>
        </div>
        <span asp-validation-summary="ModelOnly" class="error_message_form"></span>
        <div class="input_block">
            <div class="names-block">
                <span asp-validation-for="ChangePasswordDto.CurrentPassword"></span>
                <label asp-for="ChangePasswordDto.CurrentPassword">Текущий пароль</label>
                <input asp-for="ChangePasswordDto.CurrentPassword" id="names" type="password" required hover>
            </div>
            <div class="email-block not_margin_top">
                <span asp-validation-for="ChangePasswordDto.NewPassword" class="not_margin_top"></span>
                <label asp-for="ChangePasswordDto.NewPassword">Новый пароль</label>
                <input asp-for="ChangePasswordDto.NewPassword" id="email" type="password" required hover>
            </div>
            <div class="email-block not_margin_top">
                <span asp-validation-for="ChangePasswordDto.ConfirmPassword" class="not_margin_top"></span>
                <label asp-for="ChangePasswordDto.ConfirmPassword">Подтверждение пароля</label>
                <input asp-for="ChangePasswordDto.ConfirmPassword" id="email" type="password" required hover>
            </div>
        </div>
        <button type="submit" data-style="hyper-button" hover>Сохранить</button>
    </form>

    <div class="js-window hidden" js-window-send-confirmation-email>
        <div class="description" hover>
            <h2>Проверьте вашу почту</h2>
            <a hover data-style="hyper-button"><span>Продолжить</span></a>
        </div>
    </div>
    <div class="js-window hidden" js-window-update-profile>
        <div class="description" hover>
            <h2></h2>
            <a hover data-style="hyper-button" id="continueBtn"><span>Продолжить</span></a>
        </div>
    </div>
    <div class="js-window hidden" js-window-change-password>
        <div class="description" hover>
            <h2></h2>
            <a hover data-style="hyper-button" id="continueBtn"><span>Продолжить</span></a>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const confirmEmailBtn = document.getElementById('confirmEmailBtn');
            const updateProfileForm = document.getElementById('updateProfileForm');
            const changePasswordForm = document.getElementById('changePasswordForm');
            // Handle confirm email button click
            confirmEmailBtn.addEventListener('click', async (event) => {
                event.preventDefault();

                showSendEmailResultModal();

                try {
                    const response = await fetch('@Url.Action("SendEmailConfirmation", "Profile")', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    });
                } catch (error) {
                    console.error('Произошла ошибка:', error);
                }
            });

            // Handle update profile form submission
            updateProfileForm.addEventListener('submit', async (event) => {
                event.preventDefault();

                if (!jQuery(updateProfileForm).valid())
                    return;

                const formData = new FormData(updateProfileForm);
                const tokenInput = updateProfileForm.querySelector('input[name="__RequestVerificationToken"]');
                const antiForgeryToken = tokenInput ? tokenInput.value : null;

                const headers = {};
                if (antiForgeryToken) headers['RequestVerificationToken'] = antiForgeryToken;

                try {
                    const response = await fetch(updateProfileForm.action || window.location.pathname, {
                        method: 'POST',
                        headers: headers,
                        body: formData
                    });

                    const result = await response.json();
                    if (result.success) {
                        showUpdateProfileResultModal(true);
                    } else if (result.errors) {
                        showUpdateProfileResultModal(false);
                    }
                } catch (error) {
                    console.error('Произошла ошибка:', error);
                }
            });

            // Handle change password form submission
            changePasswordForm.addEventListener('submit', async (event) => {
                event.preventDefault();

                if (!jQuery(changePasswordForm).valid())
                    return;

                const formData = new FormData(changePasswordForm);
                const tokenInput = changePasswordForm.querySelector('input[name="__RequestVerificationToken"]');
                const antiForgeryToken = tokenInput ? tokenInput.value : null;

                const headers = {};
                if (antiForgeryToken) headers['RequestVerificationToken'] = antiForgeryToken;

                try {
                    const response = await fetch(changePasswordForm.action || window.location.pathname, {
                        method: 'POST',
                        headers: headers,
                        body: formData
                    });

                    const result = await response.json();
                    if (result.success) {
                        showChangePasswordResultModal(true);
                    } else if (result.errors) {
                        showChangePasswordResultModal(false);
                    }
                } catch (error) {
                    console.error('Произошла ошибка:', error);
                }
            });

            function showSendEmailResultModal() {
                const modalWindow = document.querySelector('[js-window-send-confirmation-email]');

                if (!modalWindow) {
                    return;
                }

                modalWindow.classList.replace('hidden', 'visible');
            }

            function showUpdateProfileResultModal(success) {
                const modalWindow = document.querySelector('[js-window-update-profile]');
                const resultTitle = modalWindow.querySelector('h2');

                if (!modalWindow) {
                    return;
                }

                if (success) {
                    resultTitle.textContent = "Профиль успешно обновлен.";
                    modalWindow.classList.replace('hidden', 'visible');
                } else {
                    resultTitle.textContent = "Произошла ошибка при обновлении профиля.";
                    modalWindow.classList.replace('hidden', 'visible');
                }
            }
        });

        function showChangePasswordResultModal(success) {
            const modalWindow = document.querySelector('[js-window-change-password]');
            const resultTitle = modalWindow.querySelector('h2');

            if (!modalWindow) {
                return;
            }

            if (success) {
                resultTitle.textContent = "Пароль успешно изменен.";
                modalWindow.classList.replace('hidden', 'visible');
            } else {
                resultTitle.textContent = "Произошла ошибка при изменении пароля.";
                modalWindow.classList.replace('hidden', 'visible');
            }
        }
    </script>

</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}