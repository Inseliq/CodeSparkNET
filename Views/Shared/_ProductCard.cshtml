@using CodeSparkNET.Dtos.Products
@using CodeSparkNET.Models.Enum
@model ProductDto

<div class="product-card card h-100 shadow-sm">
    <!-- Изображение товара -->
    <div class="product-image-container position-relative">
        <img src="@Model.ThumbnailUrl" class="card-img-top product-image" alt="@Model.Title" loading="lazy">

        <!-- Тип товара -->
        <div class="product-type position-absolute top-0 end-0 m-2">
            <span class="badge bg-secondary">@Model.ProductTypeName</span>
        </div>

        <!-- Быстрые действия при наведении -->
        <div class="product-actions position-absolute bottom-0 end-0 m-2 opacity-0">
            <div class="btn-group-vertical">
                <button type="button" class="btn btn-sm btn-outline-light" data-bs-toggle="tooltip"
                    title="Быстрый просмотр">
                    <i class="fas fa-eye"></i>
                </button>
                <button type="button" class="btn btn-sm btn-outline-light" data-bs-toggle="tooltip" title="В избранное">
                    <i class="fas fa-heart"></i>
                </button>
            </div>
        </div>
    </div>

    <!-- Содержимое карточки -->
    <div class="card-body d-flex flex-column">
        <!-- Категории -->
        @if (Model.Categories.Any())
        {
            <div class="product-categories mb-2">
                @foreach (var category in Model.Categories.Take(2))
                {
                    <a href="@Url.Action("Index", "Catalog", new { CategoryIds = new[] { category.Id } })"
                        class="badge bg-light text-dark text-decoration-none me-1">
                        @category.Name
                    </a>
                }
                @if (Model.Categories.Count > 2)
                {
                    <span class="badge bg-light text-muted">+@(Model.Categories.Count - 2)</span>
                }
            </div>
        }

        <!-- Название -->
        <h5 class="card-title product-title mb-2">
            <a href="@Url.Action("Details", "Product", new { slug = Model.Slug })"
                class="text-decoration-none text-dark">
                @Model.Title
            </a>
        </h5>

        <!-- Описание -->
        <p class="card-text product-description text-muted flex-grow-1">
            @Model.ShortDescription.Length > 100
            ? Model.ShortDescription.Substring(0, 100) + "..."
            : Model.ShortDescription
        </p>

        <!-- Рейтинг -->
        @if (Model.HasRating)
        {
            <div class="product-rating mb-2">
                <div class="d-flex align-items-center">
                    <div class="stars me-2">
                        @for (int i = 1; i <= 5; i++)
                        {
                            <i class="fas fa-star @(i <= Model.AverageRating ? "text-warning" : "text-muted")"></i>
                        }
                    </div>
                    <span class="rating-text text-muted">
                        @Model.AverageRating.ToString("F1") (@Model.ReviewsCount отзывов)
                    </span>
                </div>
            </div>
        }

        <!-- Цена и действия -->
        <div class="product-footer mt-auto">
            <div class="product-price mb-3">
                @if (Model.HasDiscount)
                {
                    <div class="price-with-discount">
                        <span class="current-price h5 text-success mb-0">@Model.FormattedPrice</span>
                        <span
                            class="original-price text-muted text-decoration-line-through ms-2">@Model.FormattedOriginalPrice</span>
                    </div>
                }
                else
                {
                    <span class="current-price h5 text-dark mb-0">@Model.FormattedPrice</span>
                }
            </div>

            <!-- Кнопки действий -->
            <div class="product-actions-bottom">
                @if (Model.ProductType == ProductType.Course)
                {
                    <a href="@Url.Action("Details", "Course", new { slug = Model.Slug })" class="btn btn-primary w-100">
                        Подробнее о курсе
                    </a>
                }
                else if (Model.ProductType == ProductType.Template)
                {
                    <a href="@Url.Action("Details", "Template", new { slug = Model.Slug })" class="btn btn-success w-100">
                        Скачать шаблон
                    </a>
                }
                else if (Model.ProductType == ProductType.Diploma)
                {
                    <a href="@Url.Action("Details", "Diploma", new { slug = Model.Slug })" class="btn btn-info w-100">
                        Заказать работу
                    </a>
                }
                else
                {
                    <a href="@Url.Action("Details", "Product", new { slug = Model.Slug })"
                        class="btn btn-outline-primary w-100">
                        Подробнее
                    </a>
                }
            </div>
        </div>
    </div>

    <!-- Дата добавления (в футере карточки) -->
    <div class="card-footer bg-transparent border-top-0">
        <small class="text-muted">
            <i class="fas fa-clock me-1"></i>
            Добавлено @Model.CreatedAt.ToString("dd.MM.yyyy")
        </small>
    </div>
</div>

<style>
    .product-card {
        transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
        border: 1px solid #e9ecef;
    }

    .product-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15) !important;
    }

    .product-card:hover .product-actions {
        opacity: 1 !important;
    }

    .product-image-container {
        overflow: hidden;
        height: 200px;
    }

    .product-image {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.3s ease;
    }

    .product-card:hover .product-image {
        transform: scale(1.05);
    }

    .product-title a:hover {
        color: var(--bs-primary) !important;
    }

    .product-description {
        font-size: 0.9rem;
        line-height: 1.4;
    }

    .stars {
        font-size: 0.9rem;
    }

    .product-badges .badge {
        font-size: 0.7rem;
    }

    .product-type .badge {
        font-size: 0.7rem;
    }

    .product-categories .badge {
        font-size: 0.7rem;
    }

    .product-categories a.badge:hover {
        background-color: var(--bs-primary) !important;
        color: white !important;
    }
</style>